(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{313:function(a,t,e){"use strict";e.r(t);var s=e(8),n=Object(s.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"flux-image-operations"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#flux-image-operations"}},[a._v("#")]),a._v(" Flux image operations")]),a._v(" "),t("p",[a._v("Set the namespace ("),t("code",[a._v("flux")]),a._v(") where flux was installed for running "),t("code",[a._v("fluxctl")]),a._v(":")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("FLUX_FORWARD_NAMESPACE")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("flux\n")])])]),t("p",[a._v("Check how the git repository looks like in GitHub:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-x")]),a._v(" /usr/bin/chromium-browser "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v(" chromium-browser https://github.com/ruzickap/k8s-flux-repository/ "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("fi")]),a._v("\n")])])]),t("p",[a._v("Examine git Flux repository:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-C")]),a._v(" tmp/k8s-flux-repository "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v("\n")])])]),t("p",[a._v("Output:")]),a._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("README.md\nnamespaces/cert-manager-ns.yaml\nnamespaces/harbor-ns.yaml\nnamespaces/istio-ns.yaml\nnamespaces/kubed-ns.yaml\nreleases/cert-manager-release.yaml\nreleases/harbor-release.yaml\nreleases/istio-init-release.yaml\nreleases/istio-release.yaml\nreleases/kubed-release.yaml\nworkloads/cert-manager-00-crds.yaml\nworkloads/harbor-services.yaml\nworkloads/istio-gateway.yaml\nworkloads/istio-services.yaml\n")])])]),t("p",[a._v("Install "),t("a",{attrs:{href:"https://github.com/stefanprodan/podinfo",target:"_blank",rel:"noopener noreferrer"}},[a._v("podinfo"),t("OutboundLink")],1),a._v(" application using\nFlux:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("envsubst "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("EOF"),t("span",{pre:!0,attrs:{class:"token bash punctuation"}},[a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" tmp/k8s-flux-repository/workloads/podinfo.yaml")]),a._v('\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: podinfo\n  namespace: default\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: podinfo\n  template:\n    metadata:\n      labels:\n        app: podinfo\n    spec:\n      containers:\n      - name: podinfo\n        image: "stefanprodan/podinfo:2.1.2"\n        ports:\n        - containerPort: 9898\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: podinfo-service\n  namespace: default\n  labels:\n    app: podinfo\nspec:\n  type: ClusterIP\n  selector:\n    app: podinfo\n  ports:\n  - name: podinfo-http\n    port: 9898\n    protocol: TCP\n    targetPort: 9898\n---\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: podinfo-http-virtual-service\n  namespace: default\nspec:\n  hosts:\n  - podinfo.'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${MY_DOMAIN}")]),a._v("\n  gateways:\n  - istio-system/istio-autogenerated-k8s-ingress\n  http:\n  - route:\n    - destination:\n        host: podinfo-service.default.svc.cluster.local\n        port:\n          number: 9898\nEOF")]),a._v("\n")])])]),t("p",[a._v("Add it to the git repository and let Flux to deploy the application:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-C")]),a._v(" tmp/k8s-flux-repository "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--verbose")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-C")]),a._v(" tmp/k8s-flux-repository commit "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-m")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Add podinfo"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-C")]),a._v(" tmp/k8s-flux-repository push "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-q")]),a._v("\nfluxctl "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sync")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sleep")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("40")]),a._v("\n")])])]),t("p",[a._v("Output:")]),a._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("add 'workloads/podinfo.yaml'\n[master 9c58afd] Add podinfo\n 1 file changed, 54 insertions(+)\n create mode 100644 workloads/podinfo.yaml\nSynchronizing with git@github.com:ruzickap/k8s-flux-repository\nRevision of master to apply is 9c58afd\nWaiting for 9c58afd to be applied ...\nDone.\n")])])]),t("p",[a._v("Start the web browser with "),t("a",{attrs:{href:"https://podinfo.mylabs.dev",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://podinfo.mylabs.dev"),t("OutboundLink")],1),a._v(":")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" http://podinfo.mylabs.dev\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-x")]),a._v(" /usr/bin/chromium-browser "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v(" chromium-browser "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--incognito")]),a._v(" https://podinfo.mylabs.dev "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("fi")]),a._v("\n")])])]),t("p",[a._v("Output:")]),a._v(" "),t("div",{staticClass:"language-json extra-class"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"hostname"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"podinfo-56c6447655-7pwld"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"version"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"2.1.2"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"revision"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"ab74d6ef0bd3c5f39090134f59b12837757e80b8"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"color"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"blue"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"message"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"greetings from podinfo v2.1.2"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"goos"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"linux"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"goarch"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"amd64"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"runtime"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"go1.12.7"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"num_goroutine"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"6"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"num_cpu"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"2"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[a._v("TIP")]),a._v(" "),t("p",[a._v("Workloads refers to any cluster resource responsible for the creation\nof containers from versioned images - in Kubernetes these are objects such as\nDeployments, DaemonSets, StatefulSets and CronJobs.")])]),a._v(" "),t("p",[a._v("Check whether Flux can see any running workloads:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("fluxctl list-workloads\n")])])]),t("p",[a._v("Output:")]),a._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("WORKLOAD                    CONTAINER  IMAGE                       RELEASE  POLICY\ndefault:deployment/podinfo  podinfo    stefanprodan/podinfo:2.1.2  ready\n")])])]),t("p",[a._v("Inspect which versions of the image are running in the workload:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("fluxctl list-images "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--workload")]),a._v(" default:deployment/podinfo "),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[a._v("2")]),a._v(">")]),a._v("/dev/null\n")])])]),t("p",[a._v("Output:")]),a._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("WORKLOAD                    CONTAINER  IMAGE                 CREATED\ndefault:deployment/podinfo  podinfo    stefanprodan/podinfo\n                                       |   2.1.3             13 Aug 19 09:33 UTC\n                                       |   latest            13 Aug 19 09:33 UTC\n                                       '-> 2.1.2             13 Aug 19 07:53 UTC\n                                           2.1.1             13 Aug 19 07:51 UTC\n                                           2.1.0             07 Aug 19 13:18 UTC\n                                           2.0.5             07 Aug 19 12:50 UTC\n                                           2.0.4             07 Aug 19 12:48 UTC\n                                           2.0.3             07 Aug 19 12:45 UTC\n                                           2.0.2             07 Aug 19 12:41 UTC\n                                           2.0.1             07 Aug 19 12:39 UTC\n")])])]),t("p",[a._v('Update all images belongs to "podinfo deployment":')]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("fluxctl release "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--workload")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("default:deployment/podinfo "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--user")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("pruzicka "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--message")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Update all podinfo images"')]),a._v(" --update-all-images\n")])])]),t("p",[a._v("Output:")]),a._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("Submitting release ...\nWORKLOAD                    STATUS   UPDATES\ndefault:deployment/podinfo  success  podinfo: stefanprodan/podinfo:2.1.2 -> 2.1.3\nCommit pushed:  f5587fe\nCommit applied: f5587fe\n")])])]),t("p",[a._v("Check the git repository:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-C")]),a._v(" tmp/k8s-flux-repository pull "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-q")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-C")]),a._v(" tmp/k8s-flux-repository show\n")])])]),t("p",[a._v("Output:")]),a._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('commit f5587fe7887e294b88da88490a17eed61e69b012 (HEAD -> master, tag: flux-sync, origin/master)\nAuthor: Flux &lt;petr.ruzicka@gmail.com>\nDate:   Thu Aug 29 08:07:13 2019 +0000\n\n    Update all podinfo images\n\n─────────────────────────────────────────────────────────────────────────────────────────────\nmodified: workloads/podinfo.yaml\n─────────────────────────────────────────────────────────────────────────────────────────────\n@ workloads/podinfo.yaml:1 @\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n@ workloads/podinfo.yaml:19 @ spec:\n    spec:\n      containers:\n      - name: podinfo\n        image: "stefanprodan/podinfo:2.1.2"\n        image: "stefanprodan/podinfo:2.1.3"\n        ports:\n        - containerPort: 9898\n---\n')])])]),t("p",[a._v("Verify the updated version:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("fluxctl list-images "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--workload")]),a._v(" default:deployment/podinfo "),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[a._v("2")]),a._v(">")]),a._v("/dev/null\n")])])]),t("p",[a._v("Output:")]),a._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("WORKLOAD                    CONTAINER  IMAGE                 CREATED\ndefault:deployment/podinfo  podinfo    stefanprodan/podinfo\n                                       '-> 2.1.3             13 Aug 19 09:33 UTC\n                                           latest            13 Aug 19 09:33 UTC\n                                           2.1.2             13 Aug 19 07:53 UTC\n                                           2.1.1             13 Aug 19 07:51 UTC\n...\n")])])]),t("p",[a._v("Correct image version should be also visible directly from the pod:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("kubectl describe pods "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" Image:\n")])])]),t("p",[a._v("Output:")]),a._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("    Image:          stefanprodan/podinfo:2.1.3\n")])])]),t("h2",{attrs:{id:"rolling-back-a-workload"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rolling-back-a-workload"}},[a._v("#")]),a._v(" Rolling back a workload")]),a._v(" "),t("p",[a._v("Roll back the "),t("code",[a._v("podinfo")]),a._v(" image to previous version (2.1.2)")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("fluxctl release "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--workload")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("default:deployment/podinfo --update-image"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("stefanprodan/podinfo:2.1.2\n")])])]),t("p",[a._v("Output:")]),a._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("Submitting release ...\nWORKLOAD                    STATUS   UPDATES\ndefault:deployment/podinfo  success  podinfo: stefanprodan/podinfo:2.1.3 -> 2.1.2\nCommit pushed:  55c8ed1\nCommit applied: 55c8ed1\n")])])]),t("p",[a._v("Check the git repository:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-C")]),a._v(" tmp/k8s-flux-repository pull "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-q")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-C")]),a._v(" tmp/k8s-flux-repository show\n")])])]),t("p",[a._v("Output:")]),a._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('commit 55c8ed19b9558e87cf1811f1c9bc0fef576b2e7e (HEAD -> master, origin/master)\nAuthor: Flux &lt;petr.ruzicka@gmail.com>\nDate:   Thu Aug 29 08:08:59 2019 +0000\n\n    Release stefanprodan/podinfo:2.1.2 to default:deployment/podinfo\n\n─────────────────────────────────────────────────────────────────────────────────────────────\nmodified: workloads/podinfo.yaml\n─────────────────────────────────────────────────────────────────────────────────────────────\n@ workloads/podinfo.yaml:19 @ spec:\n    spec:\n      containers:\n      - name: podinfo\n        image: "stefanprodan/podinfo:2.1.3"\n        image: "stefanprodan/podinfo:2.1.2"\n        ports:\n        - containerPort: 9898\n---\n')])])]),t("p",[a._v("Verify the image version:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("fluxctl list-images "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--workload")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("default:deployment/podinfo "),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[a._v("2")]),a._v(">")]),a._v("/dev/null\n")])])]),t("p",[a._v("Output:")]),a._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("WORKLOAD                    CONTAINER  IMAGE                 CREATED\ndefault:deployment/podinfo  podinfo    stefanprodan/podinfo\n                                       |   2.1.3             13 Aug 19 09:33 UTC\n                                       |   latest            13 Aug 19 09:33 UTC\n                                       '-> 2.1.2             13 Aug 19 07:53 UTC\n                                           2.1.1             13 Aug 19 07:51 UTC\n...\n")])])]),t("h2",{attrs:{id:"image-tag-filtering"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#image-tag-filtering"}},[a._v("#")]),a._v(" Image Tag Filtering")]),a._v(" "),t("p",[a._v("Set tag for the image:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("fluxctl policy "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--workload")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("default:deployment/podinfo --tag-all"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'2.0.*'")]),a._v("\n")])])]),t("p",[a._v("Output:")]),a._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("WORKLOAD                    STATUS   UPDATES\ndefault:deployment/podinfo  success\nCommit pushed:  3744220\n")])])]),t("p",[a._v("See what was pushed to git repository:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-C")]),a._v(" tmp/k8s-flux-repository pull "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-q")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-C")]),a._v(" tmp/k8s-flux-repository show\n")])])]),t("p",[a._v("Output:")]),a._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("commit 3744220888d3937b358fb6fc1a88ddf99dbea59a (HEAD -> master, origin/master)\nAuthor: Flux &lt;petr.ruzicka@gmail.com>\nDate:   Thu Aug 29 08:10:24 2019 +0000\n\n    Updated policies: default:deployment/podinfo\n\n─────────────────────────────────────────────────────────────────────────────────────────────\nmodified: workloads/podinfo.yaml\n─────────────────────────────────────────────────────────────────────────────────────────────\n@ workloads/podinfo.yaml:7 @ kind: Deployment\nmetadata:\n  name: podinfo\n  namespace: default\n  annotations:\n    flux.weave.works/tag.podinfo: glob:2.0.*\nspec:\n  replicas: 1\n  selector:\n")])])]),t("p",[a._v("Instruct Flux to update all images for "),t("code",[a._v("podinfo")]),a._v(":")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("fluxctl release "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--workload")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("default:deployment/podinfo --update-all-images\n")])])]),t("p",[a._v("Output:")]),a._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("Submitting release ...\nWORKLOAD                    STATUS   UPDATES\ndefault:deployment/podinfo  success  podinfo: stefanprodan/podinfo:2.1.2 -> 2.0.5\nCommit pushed:  dd0af19\nCommit applied: dd0af19\n")])])]),t("p",[a._v("Check the git repository:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-C")]),a._v(" tmp/k8s-flux-repository pull "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-q")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-C")]),a._v(" tmp/k8s-flux-repository show\n")])])]),t("p",[a._v("Output:")]),a._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('commit dd0af19b22b0db8c9e448cae5248a23800d52803 (HEAD -> master, origin/master)\nAuthor: Flux &lt;petr.ruzicka@gmail.com>\nDate:   Thu Aug 29 08:10:58 2019 +0000\n\n    Release all latest to default:deployment/podinfo\n\n─────────────────────────────────────────────────────────────────────────────────────────────\nmodified: workloads/podinfo.yaml\n─────────────────────────────────────────────────────────────────────────────────────────────\n@ workloads/podinfo.yaml:21 @ spec:\n    spec:\n      containers:\n      - name: podinfo\n        image: "stefanprodan/podinfo:2.1.2"\n        image: "stefanprodan/podinfo:2.0.5"\n        ports:\n        - containerPort: 9898\n---\n')])])]),t("p",[a._v("Check the versions running in the workload:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("fluxctl list-images "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--workload")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("default:deployment/podinfo "),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[a._v("2")]),a._v(">")]),a._v("/dev/null\n")])])]),t("p",[a._v("Output:")]),a._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("WORKLOAD                    CONTAINER  IMAGE                 CREATED\ndefault:deployment/podinfo  podinfo    stefanprodan/podinfo\n                                       |   2.1.3             13 Aug 19 09:33 UTC\n                                       |   latest            13 Aug 19 09:33 UTC\n                                       |   2.1.2             13 Aug 19 07:53 UTC\n                                       |   2.1.1             13 Aug 19 07:51 UTC\n                                       |   2.1.0             07 Aug 19 13:18 UTC\n                                       '-> 2.0.5             07 Aug 19 12:50 UTC\n                                           2.0.4             07 Aug 19 12:48 UTC\n...\n")])])]),t("h2",{attrs:{id:"automated-container-image-installation"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#automated-container-image-installation"}},[a._v("#")]),a._v(" Automated container image installation")]),a._v(" "),t("p",[a._v("Open the Harbor container repository: "),t("a",{attrs:{href:"https://harbor.mylabs.dev",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://harbor.mylabs.dev"),t("OutboundLink")],1)]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-x")]),a._v(" /usr/bin/chromium-browser "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v(" chromium-browser https://harbor.mylabs.dev "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("fi")]),a._v("\n")])])]),t("p",[a._v("Create "),t("a",{attrs:{href:"https://github.com/kubernetes-up-and-running/kuard",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://github.com/kubernetes-up-and-running/kuard"),t("OutboundLink")],1),a._v('\napplication "manifest":')]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("envsubst "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("EOF"),t("span",{pre:!0,attrs:{class:"token bash punctuation"}},[a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" tmp/k8s-flux-repository/workloads/kuard.yaml")]),a._v('\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: kuard\n  namespace: default\n  annotations:\n    flux.weave.works/automated: "true"\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: kuard\n  template:\n    metadata:\n      labels:\n        app: kuard\n    spec:\n      containers:\n      - name: kuard\n        image: "harbor.'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${MY_DOMAIN}")]),a._v('/library/kuard:v1"\n        ports:\n        - containerPort: 8080\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: kuard-service\n  namespace: default\n  labels:\n    app: kuard\nspec:\n  type: ClusterIP\n  selector:\n    app: kuard\n  ports:\n  - name: kuard-http\n    port: 8080\n    protocol: TCP\n    targetPort: 8080\n---\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: kuard-http-virtual-service\n  namespace: default\nspec:\n  hosts:\n  - kuard.'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${MY_DOMAIN}")]),a._v("\n  gateways:\n  - istio-system/istio-autogenerated-k8s-ingress\n  http:\n  - route:\n    - destination:\n        host: kuard-service.default.svc.cluster.local\n        port:\n          number: 8080\nEOF")]),a._v("\n")])])]),t("p",[a._v("Add it to the git repository and let Flux to deploy the application:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-C")]),a._v(" tmp/k8s-flux-repository pull "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-q")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-C")]),a._v(" tmp/k8s-flux-repository "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--verbose")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-C")]),a._v(" tmp/k8s-flux-repository commit "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-m")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Add kuard"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-C")]),a._v(" tmp/k8s-flux-repository push "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-q")]),a._v("\nfluxctl "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sync")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("COUNTER")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("while")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$COUNTER")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-lt")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("12")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("do")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("COUNTER")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$((")]),a._v("COUNTER"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("))")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" fluxctl list-images "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--workload")]),a._v(" default:deployment/kuard "),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[a._v("2")]),a._v(">")]),a._v("/dev/null"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sleep")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("done")]),a._v("\n")])])]),t("p",[a._v("Output:")]),a._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("add 'workloads/kuard.yaml'\n[master d792a6f] Add kuard\n 1 file changed, 56 insertions(+)\n create mode 100644 workloads/kuard.yaml\nSynchronizing with git@github.com:ruzickap/k8s-flux-repository\nRevision of master to apply is d792a6f\nWaiting for d792a6f to be applied ...\nDone.\n...\nWORKLOAD                  CONTAINER  IMAGE                            CREATED\ndefault:deployment/kuard  kuard      harbor.mylabs.dev/library/kuard  image data not available\n                                     '-> v1                           ?\n...\nWORKLOAD                  CONTAINER  IMAGE                            CREATED\ndefault:deployment/kuard  kuard      harbor.mylabs.dev/library/kuard\n                                     '-> v1                           29 Aug 19 07:47 UTC\n...\n")])])]),t("p",[a._v("Open the page: "),t("a",{attrs:{href:"https://kuard.mylabs.dev",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://kuard.mylabs.dev"),t("OutboundLink")],1)]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-x")]),a._v(" /usr/bin/chromium-browser "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v(" chromium-browser "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--incognito")]),a._v(" https://kuard.mylabs.dev "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("fi")]),a._v("\n")])])]),t("p",[a._v("Change the "),t("code",[a._v("VERSION")]),a._v(" environment variable:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sed")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"s/ENV VERSION=test/ENV VERSION=new_version/"')]),a._v(" tmp/kuard/Dockerfile\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-C")]),a._v(" tmp/kuard/ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("diff")]),a._v(" Dockerfile\n")])])]),t("p",[a._v("Output:")]),a._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("─────────────────────────────────────────────────────────────────────────────────────────────\nmodified: Dockerfile\n─────────────────────────────────────────────────────────────────────────────────────────────\n@ Dockerfile:19 @ COPY . .\nENV VERBOSE=0\nENV PKG=github.com/kubernetes-up-and-running/kuard\nENV ARCH=amd64\nENV VERSION=test\nENV VERSION=new_version\n\n# Do the build. Script is part of incoming sources.\nRUN build/build.sh\n")])])]),t("p",[a._v("Build "),t("a",{attrs:{href:"https://github.com/kubernetes-up-and-running/kuard",target:"_blank",rel:"noopener noreferrer"}},[a._v("kuard"),t("OutboundLink")],1),a._v(" container\nimage and push it to "),t("code",[a._v("harbor.mylabs.dev/library/kuard:v2")]),a._v(":")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" build "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--tag")]),a._v(" harbor."),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${MY_DOMAIN}")]),a._v("/library/kuard:v2 tmp/kuard\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" admin "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" login "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--username")]),a._v(" admin --password-stdin harbor."),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${MY_DOMAIN}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" push harbor."),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${MY_DOMAIN}")]),a._v("/library/kuard:v2\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("COUNTER")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("while")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$COUNTER")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-lt")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("12")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("do")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("COUNTER")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$((")]),a._v("COUNTER"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("))")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" fluxctl list-images "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--workload")]),a._v(" default:deployment/kuard "),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[a._v("2")]),a._v(">")]),a._v("/dev/null"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sleep")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("done")]),a._v("\n")])])]),t("p",[a._v("Output:")]),a._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("Sending build context to Docker daemon  3.378MB\nStep 1/14 : FROM golang:1.12-alpine AS build\n ---\x3e e0d646523991\n...\nStep 14/14 : CMD [ \"/kuard\" ]\n ---\x3e Using cache\n ---\x3e 652d18a08b2d\nSuccessfully built 652d18a08b2d\nSuccessfully tagged harbor.mylabs.dev/library/kuard:v2\nWARNING! Your password will be stored unencrypted in /home/pruzicka/.docker/config.json.\nConfigure a credential helper to remove this warning. See\nhttps://docs.docker.com/engine/reference/commandline/login/#credentials-store\n\nLogin Succeeded\nThe push refers to repository [harbor.mylabs.dev/library/kuard]\n4af36e68af9b: Pushed\n03901b4a2ea8: Layer already exists\nv2: digest: sha256:14e584451dfd99dcd34e67226701786b952a8c5be11ba6091e64d690364bc646 size: 739\n...\nWORKLOAD                  CONTAINER  IMAGE                            CREATED\ndefault:deployment/kuard  kuard      harbor.mylabs.dev/library/kuard\n                                     '-> v1                           29 Aug 19 07:47 UTC\nWORKLOAD                  CONTAINER  IMAGE                            CREATED\ndefault:deployment/kuard  kuard      harbor.mylabs.dev/library/kuard\n                                     |   v2                           29 Aug 19 07:49 UTC\n                                     '-> v1                           29 Aug 19 07:47 UTC\nWORKLOAD                  CONTAINER  IMAGE                            CREATED\ndefault:deployment/kuard  kuard      harbor.mylabs.dev/library/kuard\n                                     |   v2                           29 Aug 19 07:49 UTC\n                                     '-> v1                           29 Aug 19 07:47 UTC\nWORKLOAD                  CONTAINER  IMAGE                            CREATED\ndefault:deployment/kuard  kuard      harbor.mylabs.dev/library/kuard\n                                     |   v2                           29 Aug 19 07:49 UTC\n                                     '-> v1                           29 Aug 19 07:47 UTC\nWORKLOAD                  CONTAINER  IMAGE                            CREATED\ndefault:deployment/kuard  kuard      harbor.mylabs.dev/library/kuard\n                                     '-> v2                           29 Aug 19 07:49 UTC\n                                         v1                           29 Aug 19 07:47 UTC\n")])])]),t("p",[a._v("Check the git repository:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-C")]),a._v(" tmp/k8s-flux-repository pull "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-q")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-C")]),a._v(" tmp/k8s-flux-repository show\n")])])]),t("p",[a._v("Output:")]),a._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('commit c8e39248374934a8f9b4f184deb689eedb8f8cb4 (HEAD -> master, origin/master)\nAuthor: Flux &lt;petr.ruzicka@gmail.com>\nDate:   Thu Aug 29 08:21:43 2019 +0000\n\n    Auto-release harbor.mylabs.dev/library/kuard:v2\n\n─────────────────────────────────────────────────────────────────────────────────────────────\nmodified: workloads/kuard.yaml\n─────────────────────────────────────────────────────────────────────────────────────────────\n@ workloads/kuard.yaml:1 @\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n@ workloads/kuard.yaml:21 @ spec:\n    spec:\n      containers:\n      - name: kuard\n        image: "harbor.mylabs.dev/library/kuard:v1"\n        image: "harbor.mylabs.dev/library/kuard:v2"\n        ports:\n        - containerPort: 8080\n---\n')])])]),t("h2",{attrs:{id:"remove-the-applications-using-git-commit"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#remove-the-applications-using-git-commit"}},[a._v("#")]),a._v(" Remove the applications using git commit")]),a._v(" "),t("p",[a._v("See the running pods:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("kubectl get virtualservice,service,deployment,pods\n")])])]),t("p",[a._v("Output:")]),a._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("NAME                                                              GATEWAYS                                         HOSTS                  AGE\nvirtualservice.networking.istio.io/kuard-http-virtual-service     [istio-system/istio-autogenerated-k8s-ingress]   [kuard.mylabs.dev]     14m\nvirtualservice.networking.istio.io/podinfo-http-virtual-service   [istio-system/istio-autogenerated-k8s-ingress]   [podinfo.mylabs.dev]   29m\n\nNAME                      TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)    AGE\nservice/kuard-service     ClusterIP   100.70.120.183   &lt;none>        8080/TCP   14m\nservice/kubernetes        ClusterIP   100.64.0.1       &lt;none>        443/TCP    55m\nservice/podinfo-service   ClusterIP   100.70.190.65    &lt;none>        9898/TCP   29m\n\nNAME                            READY   UP-TO-DATE   AVAILABLE   AGE\ndeployment.extensions/kuard     1/1     1            1           14m\ndeployment.extensions/podinfo   1/1     1            1           29m\n\nNAME                           READY   STATUS    RESTARTS   AGE\npod/kuard-5b8478d4-nksgf       1/1     Running   0          10m\npod/podinfo-5f4bf4fd57-clsmm   1/1     Running   0          21m\n")])])]),t("p",[a._v("Let's remove the "),t("code",[a._v("podinfo")]),a._v(" and "),t("code",[a._v("kuard")]),a._v(" application:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" tmp/k8s-flux-repository/workloads/podinfo.yaml tmp/k8s-flux-repository/workloads/kuard.yaml\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-C")]),a._v(" tmp/k8s-flux-repository "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--verbose")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-C")]),a._v(" tmp/k8s-flux-repository commit "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-m")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Remove podinfo and kuard"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-C")]),a._v(" tmp/k8s-flux-repository push "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-q")]),a._v("\nfluxctl "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sync")]),a._v("\n")])])]),t("p",[a._v("Output:")]),a._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("remove 'workloads/kuard.yaml'\nremove 'workloads/podinfo.yaml'\n[master 594fe1e] Remove podinfo and kuard\n 2 files changed, 114 deletions(-)\n delete mode 100644 workloads/kuard.yaml\n delete mode 100644 workloads/podinfo.yaml\nSynchronizing with git@github.com:ruzickap/k8s-flux-repository\nRevision of master to apply is 594fe1e\nWaiting for 594fe1e to be applied ...\nDone.\n")])])]),t("p",[a._v("Check the pods - Flux should remove the "),t("code",[a._v("podinfo")]),a._v(" pod:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("kubectl get virtualservice,service,deployment,pods\n")])])]),t("p",[a._v("Output:")]),a._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("NAME                 TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE\nservice/kubernetes   ClusterIP   100.64.0.1   &lt;none>        443/TCP   57m\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);